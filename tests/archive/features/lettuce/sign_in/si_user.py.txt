from lettuce import after, before, step, world
# from lettuce.django import django_url
from nose import *
from splinter.browser import Browser

from features.common import *  # common stuff useful to all tests


@before.all
def set_browser():
    """Set the browser instance to a splinter.browser.Browser"""
    world.browser = Browser()

@step(r'Open Akvo home page')  # candidate for common
def open_akvo_homepage(step):
    world.browser.visit('http://uat.akvo.org')

#@step(u'I should see a "([^"]*)" link)
#def is_register_link_present(step, group):
#    ....

@step(r'I should see a "Register" link')
def is_register_link_present(step, text='Register'):
    world.browser.find_by_css('#main_nav')
    if world.browser.is_text_present(text):
        assert True, 'Found %s link.' % text
    else:
        assert False, 'Unable to find %s link.' % text

#(rsr_develop)pupcake:sign_in paul$ lettuce si_user.py
#Syntax error at: /Users/paul/Development/Akvo/akvo-rsr/features/sign_in/si_user.py
#Features must have a name. e.g: "Feature: This is my name"

# Oops!
# could not find features at ./features
# Question - do these @step-decorated functions need to return anything?
# Features must have a name. e.g: "Feature: This is my name"

# rest of steps...

@after.all
def quit_browser():
    print 'Quitting browser session...'
    world.browser.quit()
