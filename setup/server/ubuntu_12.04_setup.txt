Admin groups: (once-off)
-------------

sudo aptitude install members
sudo groupadd www-edit
sudo usermod -a -G www-edit www-data

Admin user setups:
------------------

sudo useradd -s /bin/bash -m -d /home/some_admin some_admin
sudo usermod -a -G sudo some_admin
sudo usermod -a -G adm some_admin
sudo usermod -a -G www-edit some_admin

System packages:
----------------

sudo aptitude install build-essential python python-dev mysql-server gettext openssl
sudo aptitude install vim curl wget ssh tar zip unzip
sudo aptitude install libxml2-dev libxslt1-dev libssl-dev libcurl4-openssl-dev libexpat1-dev libmysqlclient-dev
sudo aptitude install libpng12-dev libjpeg-dev libfreetype6-dev memcached libmemcached-dev

cd /usr/lib
sudo ln -s x86_64-linux-gnu/libjpeg.so
sudo ln -s x86_64-linux-gnu/libjpeg.so.8
sudo ln -s x86_64-linux-gnu/libpng.so
sudo ln -s x86_64-linux-gnu/libpng12.so
sudo ln -s x86_64-linux-gnu/libfreetype.so
sudo ln -s x86_64-linux-gnu/libfreetype.so.6
sudo ln -s x86_64-linux-gnu/libz.so

Git installation:
-----------------

cd /some/temp/dir
wget http://git-core.googlecode.com/files/git-1.8.0.1.tar.gz
tar -xf git-1.8.0.1.tar.gz
cd git-1.8.0.1
make prefix=/usr/local all
sudo make prefix=/usr/local install

Nginx installation:
-------------------
cd /some/temp/dir
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.32.tar.gz
wget http://zlib.net/zlib-1.2.7.tar.gz
wget http://nginx.org/download/nginx-1.3.12.tar.gz
tar -xf pcre-8.32.tar.gz
tar -xf zlib-1.2.7.tar.gz
tar -xf nginx-1.3.12.tar.gz
rm *.gz
cd nginx-1.3.12
./configure --with-http_ssl_module --with-pcre=../pcre-8.32 --with-pcre-jit --with-zlib=../zlib-1.2.7
make
sudo make install
cd /usr/local/bin
sudo ln -s /usr/local/nginx/sbin/nginx
sudo nginx -t

MySQL admin setup:
------------------
mysql -u root -p
use mysql;
create user sqladmin@localhost identified by '[some_admin_pw]';
grant all on *.* to sqladmin@localhost with grant option;
flush privileges;

RSR server config:
------------------
cd /var
sudo mkdir akvo
sudo chown root:www-edit akvo && sudo chmod g+rw akvo && sudo chmod g+s akvo

cd /var/akvo
mkdir -p www/rsr
sudo chown -R www-data www
- use the update_media.sh script to copy the latest media assets to /var/akvo/www/rsr/db from the hourly snapshots

cd /var/akvo
mkdir logs
sudo chown root logs

cd /var/akvo
mkdir config
sudo chown root config
cd config
- copy the 60-local.conf and database credentials files from another test server and edit them as necessary
- check that the configured paths use the new /var/akvo base path as necessary

Run deployment execution steps 2 to 7 for RSR (step 1 is now obsolete and will be replaced later on)
